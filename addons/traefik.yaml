apiVersion: v1  
kind: Namespace  
metadata:  
 name: traefik  
---
kind: ClusterRole  
apiVersion: rbac.authorization.k8s.io/v1beta1  
metadata:  
 name: traefik-ingress-controller
rules:  
 - apiGroups:
     - ""
   resources:
     - pods
     - services
     - endpoints
     - secrets
   verbs:
     - get
     - list
     - watch
 - apiGroups:
     - extensions
   resources:
     - ingresses
   verbs:
     - get
     - list
     - watch
---
kind: ClusterRoleBinding  
apiVersion: rbac.authorization.k8s.io/v1beta1  
metadata:  
 name: traefik-ingress-controller
roleRef:  
 apiGroup: rbac.authorization.k8s.io
 kind: ClusterRole
 name: traefik-ingress-controller
subjects:  
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: traefik
---
apiVersion: v1  
kind: ServiceAccount  
metadata:  
 name: traefik-ingress-controller
 namespace: traefik
---
apiVersion: v1  
kind: ConfigMap  
metadata:  
 name: traefik-conf
 namespace: traefik
data:  
 traefik.toml: |-
   defaultEntryPoints = ["http","https"]
   [entryPoints]
     [entryPoints.http]
     address = ":80"
       [entryPoints.http.redirect]
         entryPoint = "https"
     [entryPoints.https]
     address = ":443"
        [entryPoints.https.tls]
   [web]
   address = ":8080"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: traefik-ingress-controller
  namespace: traefik
  labels:
    k8s-app: traefik-ingress-lb
    kubernetes.io/cluster-service: "true"
spec:
  replicas: ${replicas_count}
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          configMap:
            name: traefik-conf
#        - name: ssl
#          secret:
#            secretName: traefik-cert
      containers:
        - image: traefik:${traefik_version}
          name: traefik-ingress-lb
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: "/config"
              name: "config"
#            - mountPath: "/ssl"
#              name: "ssl"
          ports:
            - containerPort: 80
            - containerPort: 443
            - containerPort: 8080
          args:
            - --configfile=/config/traefik.toml
            - --web
            - --kubernetes
            - --logLevel=DEBUG
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress-service
  namespace: traefik
  labels:
    k8s-app: traefik-ingress-lb
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - port: 80
      protocol: TCP
      name: http
      nodePort: 30080
    - port: 443
      protocol: TCP
      name: https
      nodePort: 30443
  type: NodePort
  externalIPs:
    - ${externalIPs}
---
apiVersion: v1  
kind: Service  
metadata:  
 name: traefik-web-ui
 namespace: traefik
spec:  
 selector:
   k8s-app: traefik-ingress-lb
 ports:
 - port: 80
   targetPort: 8080
---
apiVersion: extensions/v1beta1  
kind: Ingress  
metadata:  
 name: traefik-web-ui
 namespace: traefik
 annotations:
   kubernetes.io/ingress.class: traefik
#   ingress.kubernetes.io/auth-type: basic
#   ingress.kubernetes.io/auth-secret: traefik-dashboard-auth
#   ingress.kubernetes.io/auth-realm: "traefik"
spec:  
  rules:
  - host: "traefik.${domain_name}"
    http:
      paths:
      - backend:
          serviceName: traefik-web-ui
          servicePort: 80
 
